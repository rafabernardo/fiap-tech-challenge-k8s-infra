name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      BUCKET_TF_STATE: ${{ secrets.AWS_BUCKET }}

    steps:
      # 1. Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Install Terraform CLI
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Change Directory to Terraform
        run: cd terraform

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${BUCKET_TF_STATE}"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        env:
          BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
        run: |
          echo "mongo_db_url = \"${{ secrets.MONGO_DB_URL }}\"" >> terraform.tfvars
          echo "mongo_db_url_payment = \"${{ secrets.MONGO_DB_URL_PAYMENT }}\"" >> terraform.tfvars
          terraform plan -no-color -out=tfplan -var-file=terraform.tfvars -input=false
        continue-on-error: false

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.ACTION_GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
